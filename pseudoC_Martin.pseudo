PSEUDO CODE MARTIN

import java.util.Scanner;

main throws NoCmdLineArgException {
    EXCEPTION HANDLING {
        if (args.length == 0) {
            throw new NoCmdLineArgException("** Please provide a filename as an argument.");
        }
        String filename = args[0]+".txt";
    }

    PREPARATION{
        // Get txtArray -> CLASSES AND METHODS ALREADY DONE
        TxtReader fileReader2 = new TxtReader();
        ArrayList<String> txtArray = fileReader2.getNow(filename);

        // Convert it to an array of Nodes -> TO BE CREATED : Node class, For loop method, String split method 
        ArrayList<Node> nodeArray = new ArrayList<Node>();
        try{
            if (txtArray.isnotempty()) {
    
                // TODO: FAIRE DE LA BOUCLE UNE FONCTION PRENANT txtArray EN PARAMETRE (.toNodeArray(txtArray) par ex)
                for (int i = 0; i < txtArray.size(); i++) {
                    String line = txtArray.get(i);
                    // Check if txt starts with "#", "?" or "="
                    if (Character.isDigit(line.charAt(0))) {
                        String[] parts = line.split("\\s+", 2);     // split on whitespace, max 2 parts
                        String type = parts[0];                
                        String data = parts[1];

                        Node newNode = new Node(type, data);        // Here type = FLINE
                        nodeArray.push(newNode)
                        continue;
                    }
                    else if (txt.startsWith("?")){
    
                        // To be put in a method
                        String[] parts = line.split("\\s+", 4);     // split on whitespace, max 4 parts
                        String type = parts[0];                     // first part is the question mark
                        int n1 = Integer.parseInt(parts[1]);        // second part is n1
                        int n0 = Integer.parseInt(parts[2]);        // third part is n0                    
                        String data = parts[3];
    
                        Node newNode = new Node(type, n1, n0, data);    
                        nodeArray.push(newNode);
                        continue;
                    }
                    else if (txt.startsWith("=")){
                        // To be put in a method
                        String[] parts = line.split("\\s+", 2);     // split on whitespace, max 2 parts
                        String type = parts[0];                
                        String data = parts[1];
    
                        Node newNode = new Node(type, data);
                        nodeArray.push(newNode);
                        continue;
                    }
                    
                }
                // At this point, the Array of String txtArray has been converted into an Array of Nodes, each node with its attributes .type and .data (minimum) (+ .n1 and .n0 eventually)
            }
            else if (txtArray.isEmpty()) {
                FileNotFoundException e1 = new FileNotFoundException();
                throw e1;
            }
        }
        catch (FileNotFoundException e1) {
            System.out.println("** FileNotFoundException : " + e1.getMessage() + ". Please create {filename}.txt manually beforehand.");
        }
        
    }

    LANCEMENT DU JEU{
        Scanner scanner = start();  // See defined function below

        // Already defined function -> Prints "Please choose a team:"
        FirstLineReader flineReader = new FirstLineReader();
        flineReader.readNow(filename);

        
        String userInput = scanner.next();
        System.out.println(userInput);

        Node current = root;
        while (current.isQuestion()) {
            System.out.println(this.data + " (Y/N) ?");
            String answer = scanner.nextLine().toLowerCase();
            if (answer.equals("yes") || answer.equals("y")) {
                current = current.yes;
            } else {
                current = current.no;
            }
        }
        // ... 
        System.out.println("Is the team you imagined " + this.data + "?");
        String answer = scanner.nextLine().toLowerCase();
        if (answer.equals("yes") || answer.equals("y")) {
            System.out.println("I win!");
        } else {
            System.out.println("I give up.");
            //Coder la suite pour améliorer la liste 
        }

        print(array[0].data);
        i=1;
        while (i < array.length){
            if (array[i].type == QUESTION) {
                print(array[i].data);
                input(Y || N ?);
                if(Y){
                    i = array[i].n1;
                    continue;
                }
                else if (N){
                    i = array[i].n0;
                    continue;
                }
                else {
                    print("Répondre Y ou N");
                    continue;
                }            
            }
            else if (array[i].type == ANSWER){
                print("J'ai trouvé ! C'est "+array[i].data+". Correct ? (Y or N)");
                input(Y || N ?);
                if (Y){
                    print("J'ai gagné!");
                    exit;
                }
                else if (N){
                    print("Qu'avais-tu en tête ?");
                    newTeam = input();
                    print("Quelle question pourrais-je poser pour le différencier?");
                    newQuestion = input();
                    print("Pour cette question réponderiez-vous Oui ou Non pour "+newTeam+" ?");
                    newChild = input();

                    Node newNode = new Node();
                    newNode.setData()
                }
                else {
                    print("Répondre Y ou N");
                    continue;
                }
            }
        }
    }
}

public Scanner start() {
    Scanner scanner = new Scanner(System.in);
    System.out.println("Welcome to the game! Think of a Formula 1 Team and I will try to guess it :).");
    return scanner
}